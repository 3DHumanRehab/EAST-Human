hydra:
  run:
    dir: saved/hydra_logs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: saved/hydra_logs/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}_${hydra.job.id}
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    hydra_help: ???
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
  output_subdir: .hydra
  overrides:
    hydra: []
    task:
    - general.experiment_name=Human3D_eval_test
    - general.project_name=human3d
    - data/datasets=egobody
    - general.num_targets=16
    - data.num_labels=16
    - model=mask3d_hp
    - loss=set_criterion_hp
    - model.num_human_queries=5
    - model.num_parts_per_human_queries=16
    - trainer.check_val_every_n_epoch=1
    - general.topk_per_image=-1
    - model.non_parametric_queries=false
    - trainer.max_epochs=36
    - data.batch_size=4
    - data.num_workers=10
    - general.reps_per_epoch=1
    - model.config.backbone._target_=models.Res16UNet18B
    - general.checkpoint=checkpoints/human3d.ckpt
    - general.train_mode=false
    - general.save_visualizations=true
  job:
    name: main
    override_dirname: data.batch_size=4,data.num_labels=16,data.num_workers=10,data/datasets=egobody,general.checkpoint=checkpoints/human3d.ckpt,general.experiment_name=Human3D_eval_test,general.num_targets=16,general.project_name=human3d,general.reps_per_epoch=1,general.save_visualizations=true,general.topk_per_image=-1,general.train_mode=false,loss=set_criterion_hp,model.config.backbone._target_=models.Res16UNet18B,model.non_parametric_queries=false,model.num_human_queries=5,model.num_parts_per_human_queries=16,model=mask3d_hp,trainer.check_val_every_n_epoch=1,trainer.max_epochs=36
    id: ???
    num: ???
    config_name: config_base_instance_segmentation.yaml
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.0.5
    cwd: /root/HumanGaussian_zwy/Human3D
  verbose: false
